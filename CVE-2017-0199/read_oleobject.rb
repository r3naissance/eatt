#!/usr/bin/env ruby
# -*- coding: binary -*-
#
require 'fileutils'
require 'find'
require 'ole/storage'
require 'rex/ole'


def read_ole_ministream(filename)
  # ole/storage
  ole = Ole::Storage.open(filename, 'rb+')
  puts ole.dirents.length
  puts ole.root.to_tree

  # rex/ole
  ole = Rex::OLE::Storage.new(filename, Rex::OLE::STGM_READ)
  ministream = ole.instance_variable_get(:@ministream)
  data = ministream.instance_variable_get(:@data)

  olebin = ::File.open("#{filename}-ministream_data.bin", 'wb+')
  olebin.write(data)
  olebin.close
end

if __FILE__ == $PROGRAM_NAME
  dirs = ARGV

  @exit_status = 0

  if dirs.length < 1
    $stderr.puts "Usage: #{File.basename(__FILE__)} <directory or file>"
    @exit_status = 1
    exit(@exit_status)
  end

  dirs.each do |dir|
    begin
      Find.find(dir) do |full_filepath|
        next unless File.file? full_filepath
        read_ole_ministream(full_filepath)
      end
    rescue Errno::ENOENT
      $stderr.puts "#{File.basename(__FILE__)}: #{dir}: No such file or directory"
    end
  end

  exit(@exit_status.to_i)
end